"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/auth/page",{

/***/ "(app-pages-browser)/./src/app/_components/AuthConfig.tsx":
/*!********************************************!*\
  !*** ./src/app/_components/AuthConfig.tsx ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authService: function() { return /* binding */ authService; },\n/* harmony export */   \"default\": function() { return /* binding */ AuthConfig; },\n/* harmony export */   useAuthConfig: function() { return /* binding */ useAuthConfig; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/../../../../../node_modules/process/browser.js\");\n/* __next_internal_client_entry_do_not_use__ useAuthConfig,authService,default auto */ var _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n/**\n * Authentication configuration component that switches between local and AWS modes\n * Uses environment variables to determine which authentication method to use\n */ // Check if we're in production/AWS environment\nconst isAWSEnvironment = ()=>{\n    // Check for AWS-specific environment variables or deployment indicators\n    return  false || process.env.NEXT_PUBLIC_AWS_REGION || process.env.VERCEL_ENV === \"production\" ||  true && window.location.hostname !== \"localhost\";\n};\nconst useAuthConfig = ()=>{\n    _s();\n    const [isAWS, setIsAWS] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(false);\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(()=>{\n        setIsAWS(isAWSEnvironment());\n    }, []);\n    return {\n        isAWS,\n        // Manual override for testing (can be controlled via localStorage)\n        toggleMode: ()=>{\n            const newMode = !isAWS;\n            setIsAWS(newMode);\n            if (true) {\n                localStorage.setItem(\"forge_auth_mode\", newMode ? \"aws\" : \"local\");\n            }\n        },\n        getAuthMode: ()=>isAWS ? \"aws\" : \"local\"\n    };\n};\n_s(useAuthConfig, \"Xj/Gq2Rz9YAYSRoyzJYaTyo84eg=\");\n// Wait for Amplify to be configured\nconst waitForAmplifyConfig = async function() {\n    let maxWaitTime = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 5000;\n    const startTime = Date.now();\n    while(Date.now() - startTime < maxWaitTime){\n        try {\n            var _config_Auth_Cognito, _config_Auth;\n            const { Amplify } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_aws-amplify_dist_esm_index_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! aws-amplify */ \"(app-pages-browser)/../../node_modules/aws-amplify/dist/esm/index.mjs\"));\n            // Check if Amplify is configured by trying to get the config\n            const config = Amplify.getConfig();\n            if ((_config_Auth = config.Auth) === null || _config_Auth === void 0 ? void 0 : (_config_Auth_Cognito = _config_Auth.Cognito) === null || _config_Auth_Cognito === void 0 ? void 0 : _config_Auth_Cognito.userPoolId) {\n                return true;\n            }\n        } catch (error) {\n        // Amplify not ready yet\n        }\n        await new Promise((resolve)=>setTimeout(resolve, 100));\n    }\n    throw new Error(\"Amplify configuration timeout\");\n};\n// Authentication service that handles both local and AWS modes\nconst authService = {\n    async signIn (email, password) {\n        const isAWS = isAWSEnvironment();\n        if (isAWS) {\n            // Wait for Amplify to be configured\n            await waitForAmplifyConfig();\n            // AWS Amplify authentication\n            try {\n                const auth = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_aws-amplify_dist_esm_auth_index_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! aws-amplify/auth */ \"(app-pages-browser)/../../node_modules/aws-amplify/dist/esm/auth/index.mjs\"));\n                const result = await auth.signIn({\n                    username: email,\n                    password\n                });\n                // Store in sessionStorage as backup\n                sessionStorage.setItem(\"forge_authenticated\", \"true\");\n                sessionStorage.setItem(\"forge_user\", JSON.stringify({\n                    username: email\n                }));\n                return {\n                    success: true,\n                    user: result\n                };\n            } catch (error) {\n                console.error(\"AWS sign in error:\", error);\n                throw error;\n            }\n        } else {\n            // Local development mode - simulate authentication\n            await new Promise((resolve)=>setTimeout(resolve, 1000)); // Simulate network delay\n            sessionStorage.setItem(\"forge_authenticated\", \"true\");\n            sessionStorage.setItem(\"forge_user\", JSON.stringify({\n                username: email\n            }));\n            return {\n                success: true,\n                user: {\n                    username: email\n                }\n            };\n        }\n    },\n    async signUp (email, password, fullName) {\n        const isAWS = isAWSEnvironment();\n        if (isAWS) {\n            // Wait for Amplify to be configured\n            await waitForAmplifyConfig();\n            // AWS Amplify sign up\n            try {\n                const auth = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_aws-amplify_dist_esm_auth_index_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! aws-amplify/auth */ \"(app-pages-browser)/../../node_modules/aws-amplify/dist/esm/auth/index.mjs\"));\n                const result = await auth.signUp({\n                    username: email,\n                    password,\n                    options: {\n                        userAttributes: {\n                            email,\n                            name: fullName\n                        }\n                    }\n                });\n                return {\n                    success: true,\n                    result\n                };\n            } catch (error) {\n                console.error(\"AWS sign up error:\", error);\n                throw error;\n            }\n        } else {\n            // Local development mode - simulate sign up\n            await new Promise((resolve)=>setTimeout(resolve, 1000)); // Simulate network delay\n            return {\n                success: true,\n                message: \"Account created successfully! Please sign in.\"\n            };\n        }\n    },\n    async signOut () {\n        const isAWS = isAWSEnvironment();\n        if (isAWS) {\n            try {\n                const auth = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_aws-amplify_dist_esm_auth_index_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! aws-amplify/auth */ \"(app-pages-browser)/../../node_modules/aws-amplify/dist/esm/auth/index.mjs\"));\n                await auth.signOut();\n            } catch (error) {\n                console.error(\"AWS sign out error:\", error);\n            }\n        }\n        // Clear local storage in both modes\n        sessionStorage.removeItem(\"forge_authenticated\");\n        sessionStorage.removeItem(\"forge_user\");\n    },\n    async getCurrentUser () {\n        const isAWS = isAWSEnvironment();\n        // First check sessionStorage (works for both modes)\n        const isAuthenticated = sessionStorage.getItem(\"forge_authenticated\") === \"true\";\n        const userString = sessionStorage.getItem(\"forge_user\");\n        if (isAuthenticated && userString) {\n            return JSON.parse(userString);\n        }\n        if (isAWS) {\n            // Wait for Amplify to be configured\n            await waitForAmplifyConfig();\n            // Try AWS Amplify\n            try {\n                const auth = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_aws-amplify_dist_esm_auth_index_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! aws-amplify/auth */ \"(app-pages-browser)/../../node_modules/aws-amplify/dist/esm/auth/index.mjs\"));\n                const user = await auth.getCurrentUser();\n                // Store backup in sessionStorage\n                sessionStorage.setItem(\"forge_authenticated\", \"true\");\n                sessionStorage.setItem(\"forge_user\", JSON.stringify(user));\n                return user;\n            } catch (error) {\n                console.error(\"AWS getCurrentUser error:\", error);\n                throw error;\n            }\n        }\n        throw new Error(\"Not authenticated\");\n    }\n};\nfunction AuthConfig() {\n    _s1();\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(()=>{\n        const configureAWS = async ()=>{\n            if (isAWSEnvironment()) {\n                try {\n                    const { Amplify } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_aws-amplify_dist_esm_index_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! aws-amplify */ \"(app-pages-browser)/../../node_modules/aws-amplify/dist/esm/index.mjs\"));\n                    Amplify.configure({\n                        Auth: {\n                            Cognito: {\n                                userPoolId: \"us-east-1_by7tu6raq\",\n                                userPoolClientId: \"5qb2qupgofj0vpd6l8pfmn3ln2\",\n                                loginWith: {\n                                    email: true\n                                }\n                            }\n                        }\n                    });\n                    console.log(\"✅ AWS Amplify configured for production\");\n                } catch (error) {\n                    console.error(\"❌ AWS Amplify configuration failed:\", error);\n                }\n            } else {\n                console.log(\"\\uD83D\\uDD27 Running in local development mode - AWS Amplify disabled\");\n            }\n        };\n        configureAWS();\n    }, []);\n    return null;\n}\n_s1(AuthConfig, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AuthConfig;\nvar _c;\n$RefreshReg$(_c, \"AuthConfig\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/_components/AuthConfig.tsx\n"));

/***/ })

});