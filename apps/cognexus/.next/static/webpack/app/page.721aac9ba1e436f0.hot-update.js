"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/../../packages/ui/src/components/Button.tsx":
/*!***************************************************!*\
  !*** ../../packages/ui/src/components/Button.tsx ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Button: function() { return /* binding */ Button; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n/**\n * Button component for user interactions\n * \n * This component provides a consistent button styling across the application\n * with support for different visual variants and states.\n *\n * THEME-AWARE: The base styling reads from CSS variables defined at the app level\n * (e.g., in `apps/cognexus/src/app/globals.css`). This allows us to swap the\n * theme (fonts, colors, radii, shadows, motion) without changing component code.\n * We still retain Tailwind-based variant fallbacks for safety.\n * \n * @example\n * ```tsx\n * <Button variant=\"primary\" onClick={handleClick}>\n *   Click Me\n * </Button>\n * ```\n */ const Button = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().forwardRef(_c = (param, ref)=>{\n    let { children, variant = \"primary\", icon, fullWidth = false, isLoading = false, className = \"\", disabled, ...props } = param;\n    /**\n     * Base classes for all button variants.\n     * We use Tailwind utilities + arbitrary values to connect to CSS variables.\n     * - text-[var(--cnx-btn-font-size)] binds the font size to the token\n     * - px/py/rounded/bg/text/shadow read from tokens too\n     * - transition-all uses inline style for duration/easing from tokens\n     */ const baseClasses = [\n        \"inline-flex select-none items-center justify-center\",\n        // Radius from token (fallback to Tailwind rounded-md via variants if missing)\n        \"rounded-[var(--cnx-btn-radius)]\",\n        // Padding from tokens (x/y)\n        \"px-[var(--cnx-btn-padding-x)]\",\n        \"py-[var(--cnx-btn-padding-y)]\",\n        // Font sizing and weight\n        \"text-[var(--cnx-btn-font-size)] font-medium\",\n        // We will append color/shadow overrides later to ensure they win over variants\n        // Transitions + focus ring for accessibility\n        \"transition-all focus:outline-none focus:ring-2 focus:ring-offset-2\"\n    ].join(\" \");\n    /**\n     * Variant-specific fallbacks using Tailwind.\n     * These apply when tokens are not set or when a different look is desired.\n     * They also provide sensible hover/focus colors out of the box.\n     */ const variantClasses = {\n        // Primary is our main CTA; tokens will override its colors/shadow to match the theme.\n        primary: \"bg-black text-white hover:bg-neutral-900 focus:ring-black/40\",\n        // Secondary matches mockup: white surface, subtle gray border, soft layered shadow, hover lift.\n        // We intentionally do NOT apply token overrides to secondary so it can remain white\n        // even if the primary tokens change. This yields the black/white CTA pair.\n        secondary: [\n            \"bg-white text-neutral-900\",\n            \"border border-[#e9e9e7]\",\n            // Layered soft shadow to echo mockup buttons (non-inset for clean white surface)\n            \"shadow-[0_6px_18px_rgba(0,0,0,.12),_0_28px_56px_rgba(0,0,0,.10),_0_1px_0_rgba(0,0,0,.04)]\",\n            \"hover:shadow-[0_12px_28px_rgba(0,0,0,.14),_0_36px_72px_rgba(0,0,0,.12)]\",\n            \"hover:bg-neutral-100\",\n            \"focus:ring-black/40\"\n        ].join(\" \"),\n        // Ghost remains a very light-weight option for links or minimal CTAs\n        ghost: \"bg-transparent text-gray-700 hover:bg-gray-100 focus:ring-gray-500\",\n        // Accent is available for highlight usage (kept from scaffold)\n        accent: \"bg-orange-500 text-white hover:bg-orange-600 focus:ring-orange-500\"\n    };\n    // Classes for full width and disabled states\n    const widthClasses = fullWidth ? \"w-full\" : \"\";\n    const disabledClasses = disabled || isLoading ? \"opacity-50 cursor-not-allowed\" : \"\";\n    // Append token-based overrides last so they take precedence over variant fallbacks.\n    // IMPORTANT: We only apply these for the 'primary' variant to allow other\n    // variants (e.g., a white secondary button) to style independently without\n    // being forced to adopt the global token colors.\n    const tokenOverrideClasses = [\n        \"text-[var(--cnx-btn-text)]\",\n        \"bg-[var(--cnx-btn-bg)]\",\n        \"shadow-[var(--cnx-btn-shadow)]\",\n        // Hover overrides sourced from tokens\n        \"hover:text-[var(--cnx-btn-text-hover)]\",\n        \"hover:bg-[var(--cnx-btn-bg-hover)]\",\n        \"hover:shadow-[var(--cnx-btn-shadow-hover)]\",\n        // Focus ring color from token\n        \"focus:ring-[var(--cnx-focus-ring)]\"\n    ].join(\" \");\n    const tokenAppliedForVariant = variant === \"primary\" ? tokenOverrideClasses : \"\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        ref: ref,\n        className: \"\".concat(baseClasses, \" \").concat(variantClasses[variant], \" \").concat(widthClasses, \" \").concat(disabledClasses, \" \").concat(tokenAppliedForVariant, \" \").concat(className),\n        disabled: disabled || isLoading,\n        // Inline style allows variable-driven motion tokens (duration/easing)\n        style: {\n            transitionDuration: \"var(--cnx-duration)\",\n            transitionTimingFunction: \"var(--cnx-ease)\"\n        },\n        ...props,\n        children: [\n            isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                className: \"animate-spin -ml-1 mr-2 h-4 w-4\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                \"aria-hidden\": \"true\",\n                role: \"img\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                        className: \"opacity-25\",\n                        cx: \"12\",\n                        cy: \"12\",\n                        r: \"10\",\n                        stroke: \"currentColor\",\n                        strokeWidth: \"4\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\packages\\\\ui\\\\src\\\\components\\\\Button.tsx\",\n                        lineNumber: 154,\n                        columnNumber: 13\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        className: \"opacity-75\",\n                        fill: \"currentColor\",\n                        d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\packages\\\\ui\\\\src\\\\components\\\\Button.tsx\",\n                        lineNumber: 162,\n                        columnNumber: 13\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\packages\\\\ui\\\\src\\\\components\\\\Button.tsx\",\n                lineNumber: 146,\n                columnNumber: 11\n            }, undefined),\n            icon && !isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"mr-2\",\n                children: icon\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\packages\\\\ui\\\\src\\\\components\\\\Button.tsx\",\n                lineNumber: 171,\n                columnNumber: 32\n            }, undefined),\n            children\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\packages\\\\ui\\\\src\\\\components\\\\Button.tsx\",\n        lineNumber: 133,\n        columnNumber: 7\n    }, undefined);\n});\n_c1 = Button;\n// Set display name for better debugging\nButton.displayName = \"Button\"; // This component provides a reusable button with different style variants\n // and supports loading states, icons, and full width options.\n // It uses Tailwind CSS + CSS variables to enable drop-in theming.\n // and is fully typed with TypeScript.\nvar _c, _c1;\n$RefreshReg$(_c, \"Button$React.forwardRef\");\n$RefreshReg$(_c1, \"Button\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../packages/ui/src/components/Button.tsx\n"));

/***/ })

});