"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/backgrounds/AnimatedInfinityBackground.tsx":
/*!*******************************************************************!*\
  !*** ./src/components/backgrounds/AnimatedInfinityBackground.tsx ***!
  \*******************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AnimatedInfinityBackground; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../../node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n/**\n * AnimatedInfinityBackground\n * \n * Location note:\n *   - This file is placed under `apps/cognexus/src/components/backgrounds/` so that\n *     background visuals are organized in a clear, discoverable folder.\n *   - If we later want to reuse this in other apps (e.g., Forge), we can move it into\n *     `packages/ui/src/components/backgrounds/` and re-export from `@cnx/ui`.\n * \n * Usage guidance:\n *   - Import in hero or any section as a background layer behind foreground content.\n *     Example:\n *       import AnimatedInfinityBackground from '@/components/backgrounds/AnimatedInfinityBackground';\n *       ...\n *       <section className=\"relative ...\">\n *         <AnimatedInfinityBackground className=\"pointer-events-none absolute inset-0\" />\n *         <div className=\"relative z-10\">...foreground content...</div>\n *       </section>\n * \n * Implementation note:\n *   - This is a placeholder component for you to paste your actual animation code.\n *   - Keep the default export and prop signature stable to avoid import churn.\n *   - Feel free to add props (speed, color, density, etc.) and tailor the DOM structure.\n */ // Slower, expressive animated infinity background\nfunction AnimatedInfinityBackground(param) {\n    let { className = \"\", lineColor = \"#000000\", opacity = 0.18, density = 7, morph = true, // Restore original cycle length; we'll hold shape using shapeHold instead\n    modeCycleSeconds = 16, // New: scale factor to enlarge/reduce the animation footprint relative to the SVG viewBox\n    // Increasing this helps the animation visually fill the screen behind content.\n    scale = 1.4, // Restore original evolution speed; we'll use shapeHold for perceived stability\n    evolveRate = 0.0005, // Restore original jitter amplitude; can be tuned if needed\n    morphAmount = 0.028, // Restore original dash flow speed so lines visibly move\n    flowSpeed = 240, // Restore original base time scales for the parametric path\n    pathTimeScaleX = 0.12, pathTimeScaleY = 0.13, // New: percentage of each mode cycle to \"hold\" the shape (no blending), with quick transitions\n    // 0 = always blend smoothly; 0.65 = hold ~65% of the cycle on a stable shape\n    shapeHold = 0.65, // New: start the animation as if this many REAL seconds have already elapsed.\n    // Example: startAtSeconds=8 will jump to the visual state you'd see ~8s after load.\n    startAtSeconds = 0 } = param;\n    _s();\n    const svgRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Initialize time with a real-seconds offset converted into our internal units.\n    // Internally, we advance time by (deltaMs * evolveRate), so 1 real second ~= 1000 * evolveRate units.\n    // Therefore, to jump ahead by N real seconds on mount, we seed time with N * 1000 * evolveRate.\n    const [time, setTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(()=>startAtSeconds * 1000 * evolveRate);\n    const [reduced, setReduced] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const rafRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Respect reduced motion\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        var _mq_addEventListener;\n        if (false) {}\n        const mq = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\n        setReduced(mq.matches);\n        const onChange = ()=>setReduced(mq.matches);\n        (_mq_addEventListener = mq.addEventListener) === null || _mq_addEventListener === void 0 ? void 0 : _mq_addEventListener.call(mq, \"change\", onChange);\n        return ()=>{\n            var _mq_removeEventListener;\n            return (_mq_removeEventListener = mq.removeEventListener) === null || _mq_removeEventListener === void 0 ? void 0 : _mq_removeEventListener.call(mq, \"change\", onChange);\n        };\n    }, []);\n    // Drive the animation\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (reduced) return;\n        let last = performance.now();\n        const tick = (now)=>{\n            const dt = Math.min(64, now - last);\n            last = now;\n            // Use evolveRate so we can tune how quickly the overall motion progresses\n            setTime((t)=>t + dt * evolveRate);\n            rafRef.current = requestAnimationFrame(tick);\n        };\n        rafRef.current = requestAnimationFrame(tick);\n        return ()=>{\n            if (rafRef.current) cancelAnimationFrame(rafRef.current);\n        };\n    }, [\n        reduced,\n        evolveRate\n    ]);\n    const vb = {\n        w: 1400,\n        h: 900,\n        cx: 700,\n        cy: 450\n    };\n    const MODES = [\n        {\n            fx: 1,\n            fy: 2,\n            sx: 0.34,\n            sy: 0.24\n        },\n        {\n            fx: 1,\n            fy: 3,\n            sx: 0.36,\n            sy: 0.22\n        },\n        {\n            fx: 2,\n            fy: 3,\n            sx: 0.32,\n            sy: 0.26\n        },\n        {\n            fx: 3,\n            fy: 5,\n            sx: 0.30,\n            sy: 0.28\n        }\n    ];\n    const smoothstep = (t)=>t * t * (3 - 2 * t);\n    const getBlendParams = (t)=>{\n        // Guard against invalid or zero duration\n        const T = Number.isFinite(modeCycleSeconds) && modeCycleSeconds > 0 ? modeCycleSeconds : 16;\n        const total = Math.max(1, MODES.length);\n        const sRaw = t / T;\n        const s = Number.isFinite(sRaw) ? sRaw : 0;\n        const idxBase = Math.floor(s);\n        const idx = Number.isFinite(idxBase) ? (idxBase % total + total) % total : 0;\n        const next = (idx + 1) % total;\n        const fracBase = s % 1;\n        let frac = smoothstep(Number.isFinite(fracBase) ? (fracBase + 1) % 1 : 0);\n        // Apply shapeHold: keep frac snapped to 0 or 1 for a large portion of the cycle\n        // plateau defines the central region that will be mapped to a quick transition zone\n        const clampedHold = Math.max(0, Math.min(0.95, shapeHold));\n        if (clampedHold > 0) {\n            const plateau = clampedHold; // e.g., 0.65 => 65% hold\n            const edge = (1 - plateau) / 2; // time spent transitioning on each side\n            if (frac < edge) {\n                frac = 0;\n            } else if (frac > 1 - edge) {\n                frac = 1;\n            } else {\n                // Remap the remaining small band to [0,1] for a quick but smooth transition\n                const u = (frac - edge) / (1 - 2 * edge);\n                const us = smoothstep(u);\n                frac = Math.max(0, Math.min(1, us));\n            }\n        }\n        var _MODES_idx;\n        const a = (_MODES_idx = MODES[idx]) !== null && _MODES_idx !== void 0 ? _MODES_idx : MODES[0];\n        var _MODES_next;\n        const b = (_MODES_next = MODES[next]) !== null && _MODES_next !== void 0 ? _MODES_next : MODES[0];\n        return {\n            fx: a.fx * (1 - frac) + b.fx * frac,\n            fy: a.fy * (1 - frac) + b.fy * frac,\n            sx: a.sx * (1 - frac) + b.sx * frac,\n            sy: a.sy * (1 - frac) + b.sy * frac,\n            // Restore original rotation feel\n            rot: 0.05 * Math.sin(t * 0.15)\n        };\n    };\n    const makePath = function() {\n        let phase = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, amp = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, speed = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;\n        const N = 380;\n        const pts = [];\n        const p = getBlendParams(time);\n        // Apply the scale factor to expand the drawing amplitude so the figure fills more of the viewport\n        const ax = vb.w * p.sx * amp * scale;\n        const ay = vb.h * p.sy * amp * scale;\n        for(let i = 0; i <= N; i++){\n            const u = i / N * Math.PI * 2;\n            let x = Math.sin(p.fx * (u + phase + time * pathTimeScaleX * speed));\n            let y = Math.sin(p.fy * (u + phase + time * pathTimeScaleY * speed) + Math.PI / 2);\n            if (morph) {\n                // Use restored jitter amplitude; still visually cohesive with shapeHold in effect\n                x += morphAmount * Math.sin(3 * u + time * 0.6 + phase * 1.3);\n                y += morphAmount * 0.86 * Math.cos(4 * u + time * 0.55 + phase * 1.1);\n            }\n            const cosr = Math.cos(p.rot);\n            const sinr = Math.sin(p.rot);\n            const rx = x * cosr - y * sinr;\n            const ry = x * sinr + y * cosr;\n            pts.push([\n                vb.cx + rx * ax,\n                vb.cy + ry * ay\n            ]);\n        }\n        const [x0, y0] = pts[0];\n        let d = \"M \".concat(x0.toFixed(2), \" \").concat(y0.toFixed(2));\n        for(let i = 1; i < pts.length; i++){\n            const [x, y] = pts[i];\n            d += \" L \".concat(x.toFixed(2), \" \").concat(y.toFixed(2));\n        }\n        return d;\n    };\n    const layers = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        return new Array(density).fill(0).map((_, i)=>{\n            // Restore slight per-layer differences for depth while keeping overall cohesion\n            const tPhase = i / Math.max(1, density - 1) * Math.PI * 0.8;\n            const amp = 1 + (i - (density - 1) / 2) * 0.035;\n            const speed = 0.7 + i * 0.12; // parallax speeds\n            return {\n                d: makePath(tPhase, amp, speed),\n                i,\n                speed\n            };\n        });\n    }, [\n        density,\n        time,\n        morph,\n        modeCycleSeconds,\n        scale,\n        shapeHold\n    ]);\n    const dashBase = 22;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"pointer-events-none absolute inset-0 -z-10 overflow-hidden \".concat(className),\n        \"aria-hidden\": true,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n            ref: svgRef,\n            className: \"h-full w-full\",\n            viewBox: \"0 0 \".concat(vb.w, \" \").concat(vb.h),\n            role: \"img\",\n            \"aria-label\": \"Animated network lines forming an evolving figure\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"defs\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"radialGradient\", {\n                            id: \"fade\",\n                            cx: \"50%\",\n                            cy: \"50%\",\n                            r: \"85%\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                                    offset: \"0%\",\n                                    stopColor: \"#ffffff\",\n                                    stopOpacity: \"1\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\apps\\\\cognexus\\\\src\\\\components\\\\backgrounds\\\\AnimatedInfinityBackground.tsx\",\n                                    lineNumber: 230,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"stop\", {\n                                    offset: \"100%\",\n                                    stopColor: \"#ffffff\",\n                                    stopOpacity: \"0.25\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\apps\\\\cognexus\\\\src\\\\components\\\\backgrounds\\\\AnimatedInfinityBackground.tsx\",\n                                    lineNumber: 231,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\apps\\\\cognexus\\\\src\\\\components\\\\backgrounds\\\\AnimatedInfinityBackground.tsx\",\n                            lineNumber: 229,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"mask\", {\n                            id: \"edgeMask\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"rect\", {\n                                width: \"100%\",\n                                height: \"100%\",\n                                fill: \"url(#fade)\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\apps\\\\cognexus\\\\src\\\\components\\\\backgrounds\\\\AnimatedInfinityBackground.tsx\",\n                                lineNumber: 234,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\apps\\\\cognexus\\\\src\\\\components\\\\backgrounds\\\\AnimatedInfinityBackground.tsx\",\n                            lineNumber: 233,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\apps\\\\cognexus\\\\src\\\\components\\\\backgrounds\\\\AnimatedInfinityBackground.tsx\",\n                    lineNumber: 227,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"rect\", {\n                    width: \"100%\",\n                    height: \"100%\",\n                    style: {\n                        fill: \"var(--cnx-bg)\"\n                    }\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\apps\\\\cognexus\\\\src\\\\components\\\\backgrounds\\\\AnimatedInfinityBackground.tsx\",\n                    lineNumber: 239,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                    mask: \"url(#edgeMask)\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                            cx: vb.cx,\n                            cy: vb.cy,\n                            r: vb.w * 0.22,\n                            fill: \"url(#fade)\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\apps\\\\cognexus\\\\src\\\\components\\\\backgrounds\\\\AnimatedInfinityBackground.tsx\",\n                            lineNumber: 242,\n                            columnNumber: 11\n                        }, this),\n                        layers.map((param, idx)=>/*#__PURE__*/ {\n                            let { d } = param;\n                            return (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                d: d,\n                                fill: \"none\",\n                                stroke: lineColor,\n                                strokeOpacity: Math.max(0.1, opacity - idx * 0.012),\n                                strokeWidth: 1.4 + idx * 0.2,\n                                strokeLinecap: \"round\",\n                                strokeLinejoin: \"round\",\n                                style: {\n                                    strokeDasharray: \"\".concat(dashBase + idx * 6, \" \").concat((dashBase + idx * 6) * 1.5),\n                                    // Restore quicker dash flow so motion is visible while the shape holds\n                                    strokeDashoffset: time * flowSpeed * (1 + idx * 0.12) % 4000\n                                }\n                            }, idx, false, {\n                                fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\apps\\\\cognexus\\\\src\\\\components\\\\backgrounds\\\\AnimatedInfinityBackground.tsx\",\n                                lineNumber: 245,\n                                columnNumber: 13\n                            }, this);\n                        })\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\apps\\\\cognexus\\\\src\\\\components\\\\backgrounds\\\\AnimatedInfinityBackground.tsx\",\n                    lineNumber: 241,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\apps\\\\cognexus\\\\src\\\\components\\\\backgrounds\\\\AnimatedInfinityBackground.tsx\",\n            lineNumber: 220,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\justinschaad\\\\source\\\\repos\\\\CogNexus.io\\\\apps\\\\cognexus\\\\src\\\\components\\\\backgrounds\\\\AnimatedInfinityBackground.tsx\",\n        lineNumber: 216,\n        columnNumber: 5\n    }, this);\n}\n_s(AnimatedInfinityBackground, \"Rhf5fEmfR/kGNZ1Y970Cl0in36M=\");\n_c = AnimatedInfinityBackground;\nvar _c;\n$RefreshReg$(_c, \"AnimatedInfinityBackground\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/backgrounds/AnimatedInfinityBackground.tsx\n"));

/***/ })

});